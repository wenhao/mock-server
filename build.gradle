plugins {
    id 'java-library'
    id 'idea'
    id 'net.ltgt.apt' version '0.16'
    id 'checkstyle'
    id "org.springframework.boot" version '2.0.3.RELEASE'
    id "com.gorylenko.gradle-git-properties" version "1.4.21"
    id "org.owasp.dependencycheck" version "3.2.1"
    id 'com.github.kt3k.coveralls' version '2.7.1'
    id 'jacoco'
    id "com.github.ksoichiro.spelling" version "0.1.1"
    id "com.simonharrer.modernizer" version "1.6.0-1"
    id 'com.github.ksoichiro.console.reporter' version '0.5.0'
    id 'com.github.ksoichiro.build.info' version '0.2.0'
    id "com.palantir.docker" version "0.20.1"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.github.wenhao'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE'
    }
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-netflix-zuul'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.mapstruct:mapstruct-jdk8:1.2.0.Final'
    implementation 'io.github.openfeign.form:feign-form:3.3.0'
    implementation 'io.github.openfeign.form:feign-form-spring:3.3.0'
    compileOnly 'org.projectlombok:lombok:1.18.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.0'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.2.0.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core:3.10.0'
}

repositories {
    jcenter()
}

checkstyle {
    toolVersion '8.1'
    ignoreFailures = false
    configFile file("$project.rootDir/config/checkstyle/checkstyle.xml")
    sourceSets = [sourceSets.main]

    checkstyleMain {
        source = 'src/main/java'
    }
}
copy {
    from "./config/githooks/"
    into "./.git/hooks/"
    fileMode 0755
}

springBoot {
    buildInfo()
}


docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }

        rule {
            enabled = true
            element = 'PACKAGE'
            includes = ['com.github.wenhao.service']

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }
    }
}

